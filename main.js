!function(){"use strict";class e{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_showInputError(e,t){const n=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.textContent=t,n.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e,e.validationMessage):this._showInputError(e,e.validationMessage)}_getInvalidInput(e){return e.some((e=>!e.validity.valid))}disableSubmitButton(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0}_toggleButtonState(e){this._getInvalidInput(e)?this.disableSubmitButton():(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState(this._inputList,this._buttonElement)}))}))}enableValidation(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}class t{constructor(e,t,n){this._name=e.name,this._link=e.link,this._template=t,this._handleCardClick=n}_getTemplate(){return this._template.querySelector(".elements__element").cloneNode(!0)}_handleLikeImage(){this._cardElement.querySelector(".elements__heart").classList.toggle("elements__heart_active")}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}_addEventListeners(){this._cardElement.querySelector(".elements__heart").addEventListener("click",(()=>{this._handleLikeImage()})),this._cardElement.querySelector(".elements__trash").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardElement.querySelector(".elements__image").addEventListener("click",(()=>{this._handleCardClick(this._link,this._name)}))}render(){return this._cardElement=this._getTemplate(),this._cardElement.querySelector(".elements__text").textContent=this._name,this._cardElement.querySelector(".elements__image").style.backgroundImage="url(".concat(this._link,")"),this._addEventListeners(),this._cardElement}}function n(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class s{constructor(e){n(this,"_handleEscClose",(e=>{"Escape"===e.key&&this.close()})),n(this,"_handleOverlayClose",(e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__image-wrapper"))&&this.close()})),this._popup=e}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose),document.addEventListener("click",this._handleOverlayClose)}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose),document.removeEventListener("click",this._handleOverlayClose)}setEventListeners(){this._popup.querySelector(".modal__close-button").addEventListener("click",(()=>{this.close()}))}}class i extends s{constructor(e,t){var n,s;super(e),s=e=>this._handleFormSubmit(this._getInputValues()),(n="handleFormSubmit")in this?Object.defineProperty(this,n,{value:s,enumerable:!0,configurable:!0,writable:!0}):this[n]=s,this._handleFormSubmit=t,this._form=this._popup.querySelector(".form"),this._inputFieldValues={},this._inputList=[...this._form.querySelectorAll(".form__input")]}_getInputValues(){return this._inputList.forEach((e=>{this._inputFieldValues[e.name]=e.value})),this._inputFieldValues}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",this.handleFormSubmit)}close(){super.close(),this._form.reset()}}const r=document.querySelector(".modal_type_edit-profile"),o=document.querySelector(".modal_type_add-place"),l=document.querySelector(".modal_type_preview-image"),a=document.querySelector(".form-add-place"),c=document.querySelector(".form-profile"),u=document.querySelector(".profile__name"),_=document.querySelector(".profile__title"),d=document.querySelector(".form__input_type_name"),m=document.querySelector(".form__input_type_job"),h=document.querySelector(".profile__edit-button"),p=document.querySelector(".profile__add-button"),E=document.querySelector(".elements__list"),b=document.querySelector(".elements-template").content,v={inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__error_visible"};function y(e){const n=new t(e,b,S);E.prepend(n.render())}function S(e,t){L.open(e,t)}new class{constructor(e,t){let{items:n,renderer:s}=e;this._itemsRendered=n,this._renderer=s,this._container=t}renderer(){this._itemsRendered.reverse().forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:y},b).renderer();const L=new class extends s{constructor(e){super(e)}open(e,t){super.open(),this._link=e,this._name=t,this._popup.querySelector(".modal__image-caption").textContent=this._name;const n=this._popup.querySelector(".modal__image-container");n.src=this._link,n.alt=this._name}}(l);L.setEventListeners();const g=new i(o,(function(e){y({name:e.place,link:e.link}),g.close(),q.disableSubmitButton()}));g.setEventListeners();const k=new class{constructor(e){let{userNameElement:t,userJobElement:n}=e;this._userNameElement=t,this._userJobElement=n}getUserInfo(){return this._userData={name:this._userNameElement.textContent,job:this._userJobElement.textContent},this._userData}setUserInfo(e){let{inputName:t,inputJob:n}=e;this._userNameElement.textContent=t,this._userJobElement.textContent=n}}({userNameElement:u,userJobElement:_}),C=new i(r,(function(e){k.setUserInfo({inputName:e.name,inputJob:e.job}),C.close(),w.disableSubmitButton()}));C.setEventListeners();const q=new e(v,a);q.enableValidation();const w=new e(v,c);w.enableValidation(),h.addEventListener("click",(()=>{!function(){const e=k.getUserInfo();d.value=e.name,m.value=e.job}(),C.open()})),p.addEventListener("click",(()=>{g.open()})),f}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,